<?xml version="1.0"?>
<hackerbot xmlns="http://www.github/cliffe/SecGen/hackerbotz"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://www.github/cliffe/SecGen/hackerbot">

	<name>Hackerbot</name>

	<AIML_chatbot_rules>config/AIML</AIML_chatbot_rules>

	<messages>
		<greeting>The blackhat hacking group Empir3 are about to hack your system. I'll do what I can hold them off, but you are going to have to work with me to protect yourself. I'll cough up some flags if you work with me.</greeting>
		<say_ready>When you are ready, simply say 'ready'.</say_ready>
		<help>I am waiting for you to say 'ready', 'next', 'previous', or 'list'</help>
		<next>Ok, I'll do what I can to move things along...</next>
		<previous>Ok, I'll do what I can to back things up...</previous>
		<last_attack>That's the last attack for now. You can rest easy, until next time...</last_attack>
		<first_attack>You are back to the beginning...</first_attack>
		<getting_shell>Ok. Gaining shell access, and running post command...</getting_shell>
		<got_shell>We are in to your system...</got_shell>
		<repeat>Let me know when you are 'ready' to try again, if you want to move on to another attack, say 'next', or 'previous' and I'll move things along</repeat>
		<non_answer>Wouldn't you like to know.</non_answer>
	</messages>

	<hack>
		<prompt>An attempt to delete /tmp/test/1 is coming. Stop the attack using access controls.</prompt>

		<!--ssh -oStrictHostKeyChecking=no control@localhost -->
		<get_shell>bash</get_shell>
		<shell_fail_message>Oh no. Failed to get shell... You need to let us in.</shell_fail_message>
		<post_command>rm --interactive=never /tmp/test/1; echo $?</post_command>
		<condition>
			<output_contains>Permission</output_contains>
			<message>:) Well done! flag{yay1!}</message>
			<trigger_next>true</trigger_next>
		</condition>
		<condition>
			<output_equals>0</output_equals>
			<message>:( We managed to delete your file! You need to use access controls to protect the file.</message>
		</condition>
		<condition>
			<output_contains>No such file or directory</output_contains>
			<message>:( The file should exist!</message>
		</condition>
		<else_condition>
			<message>:( Something was not right...</message>
		</else_condition>

	</hack>

	<hack>
		<prompt>An attempt to delete /tmp/test/2 is coming. Stop the attack using access controls.</prompt>

		<!--ssh -oStrictHostKeyChecking=no control@localhost -->
		<get_shell>bash</get_shell>
		<shell_fail_message>Oh no. Failed to get shell... You need to let us in.</shell_fail_message>
		<post_command>rm --interactive=never /tmp/test/2; echo $?</post_command>
		<condition>
			<output_contains>Permission</output_contains>
			<message>:) Well done! flag{yay1!}</message>
			<trigger_next>true</trigger_next>
		</condition>
		<condition>
			<output_equals>0</output_equals>
			<message>:( We managed to delete your file! You need to use access controls to protect the file.</message>
		</condition>
		<condition>
			<output_contains>No such file or directory</output_contains>
			<message>:( The file should exist!</message>
		</condition>
		<else_condition>
			<message>:( Something was not right...</message>
		</else_condition>

	</hack>

	<hack>
		<!--<topic>Protecting integrity with file attributes</topic>-->
		<prompt>An attempt to delete /tmp/test/log1 is coming. Stop the attack using file attributes.</prompt>

		<!--ssh -oStrictHostKeyChecking=no control@localhost -->
		<get_shell>bash</get_shell>
		<shell_fail_message>Oh no. Failed to get shell... You need to let us in.</shell_fail_message>
		<post_command>rm --interactive=never /tmp/test/log1; echo $?</post_command>
		<condition>
			<output_contains>Operation not permitted</output_contains>
			<message>:) Well done! flag{yay1!}</message>
			<trigger_next>true</trigger_next>
		</condition>
		<condition> <!-- TODO: chmod to defeat the defense -->
			<output_contains>Permission denied</output_contains>
			<message>:( You did protect the file, but not using file attributes.</message>
		</condition>
		<condition>
			<output_equals>0</output_equals>
			<message>:( We managed to delete your file! You need to use file attributes to protect the file.</message>
		</condition>
		<condition>
			<output_contains>No such file or directory</output_contains>
			<message>:( The file should exist!</message>
		</condition>
		<else_condition>
			<message>:( Something was not right...</message>
		</else_condition>

	<hack>
		<!--<topic>Protecting integrity with file attributes</topic>-->
		<prompt>An attempt to overwrite /tmp/test/log1 is coming. Stop the attack by making the file append only.</prompt>

		<!--ssh -oStrictHostKeyChecking=no control@localhost -->
		<get_shell>bash</get_shell>
		<shell_fail_message>Oh no. Failed to get shell... You need to let us in.</shell_fail_message>
		<post_command>echo 'your logs are gone!' > /tmp/test/log1; echo 'damn!' >> /tmp/test/log1; tail /tmp/test/log1</post_command>
		<condition>
			<output_not_contains>damn!</output_not_contains>
			<message>:( You stopped anything from being appended to the file.</message>
		</condition>
		<condition>
			<output_contains>Operation not permitted</output_contains>
			<!--TODO <output_contains>damn!</output_contains>-->
			<message>:) Well done! flag{yay1!}</message>
			<trigger_next>true</trigger_next>
		</condition>
		<condition>
			<output_equals>0</output_equals>
			<message>:( We managed to delete your file! You need to use file attributes to protect the file.</message>
		</condition>
		<condition>
			<output_contains>No such file or directory</output_contains>
			<message>:( The file should exist!</message>
		</condition>
		<else_condition>
			<message>:( Something was not right...</message>
		</else_condition>

	</hack>



</hackerbot> 
